
# @package _global_
# to execute this experiment run:
# python train.py experiment=example

defaults:
  - override /data: equal_split.yaml
  - override /model: distill_eff_model.yaml
  - override /callbacks: default.yaml
  - override /trainer: gpu.yaml
  - override /logger: wandb.yaml # set logger here or use command line (e.g. `python train.py logger=tensorboard`)
  - override /paths: default.yaml
  - override /extras: default.yaml
  - override /hydra: default.yaml

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

# task name, determines output directory path
task_name: "vae_distillation"

tags: ["dev", "Sussex Dataset", "VAE", "Distill"]

# set False to skip model training
train: True

# evaluate on test set, using best model weights achieved during training
# lightning chooses best weights based on the metric specified in checkpoint callback
predict: False

# compile model for faster training with pytorch 2.0
compile: False

# simply provide checkpoint path to resume training
ckpt_path: Null
#${paths.log_dir}vae_distillation/runs/2023-08-21_16-57-25_30464/checkpoints/epoch_099.ckpt
#${paths.log_dir}multitask_distill/runs/2023-08-15_20-53-55/checkpoints/epoch_043.ckpt'
# seed for random number generators in pytorch, numpy and python.random
seed: 89023

data:
  seed: ${seed}

# you must proide a checkpoint
model:
  teacher_ckpt: Null #${paths.log_dir}train_vae_cyclic/runs/2023-08-19_20-45-27_89023/checkpoints/epoch_045.ckpt
  student:
    version: 'efficientnet-b0'
  apply_recon: True

trainer:
  min_epochs: 15
  max_epochs: 100
  # gradient_clip_val: 0.5
  fast_dev_run: False

logger:
  wandb:
    tags: ${tags}
    group: "Distillation VAE"
  aim:
    experiment: "ECOACOUSTICS VAE DISTILLATION"

hydra:
  run:
    dir: ${paths.log_dir}/${task_name}/runs/${now:%Y-%m-%d}_${now:%H-%M-%S}_${seed}

callbacks:
  model_checkpoint:
    monitor: "val/student_loss"
  early_stopping:
    monitor: "val/student_loss"
    patience: 10
  umap_latent:
    model_name: 'EfficientNetVAE'
    seed: ${seed}
    save_path: ${paths.log_dir}/${task_name}/runs/${now:%Y-%m-%d}_${now:%H-%M-%S}_${seed}
  # reconstructor:
    # perc_recon: 0.5
